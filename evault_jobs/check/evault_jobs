#!/usr/bin/python

import datetime
import time

server_warn_seconds = 100800
server_crit_seconds = 201600
desktop_warn_seconds = 259200
desktop_crit_seconds = 518400

def datetime_sec_diff(dt_string):
    f = '%Y-%m-%d %H:%M:%S'
    d2 = datetime.datetime.strptime(dt_string,f)
    d1 = datetime.datetime.now()
    diff = time.mktime(d1.timetuple()) - time.mktime(d2.timetuple())
    diff = int(diff)
    return diff

def inventory_evault_jobs(info):
    for line in info:
        yield line[0], None

def check_evault_jobs(item, params, info):
    for line in info:
        if line[0] == item:
            if line[1] == "DESKTOP":
                warn = desktop_warn_seconds
                crit = desktop_crit_seconds
            elif line[1] == "SERVER":
                warn = server_warn_seconds
                crit = server_crit_seconds
            elif line[1] == "VSPHERE_APPLIANCE":
                warn = server_warn_seconds
                crit = server_crit_seconds
            elif line[1] == "HYPERV_COORDINATOR":
                warn = server_warn_seconds
                crit = server_crit_seconds
            else:
                warn = 0
                crit = 0
            
            lcdate = str(line[3])+" "+str(line[4])
            diff_seconds = datetime_sec_diff(lcdate)
            hours = diff_seconds / 3600

            if line[2] == "COMPLETED" and diff_seconds < warn:
                return 0, "Last Job %s at %s %s, %s Hours ago" % (line[2],line[3],line[4],int(hours))
            elif line[2] == "COMPLETED" and diff_seconds < crit:
                return 1, "Last Job %s at %s %s, %s Hours ago" % (line[2],line[3],line[4],int(hours))
            elif line[2] == "COMPLETED" and diff_seconds >= crit:
                return 2, "Last Job %s at %s %s, %s Hours ago" % (line[2],line[3],line[4],int(hours))
            elif line[2] == "COMPLETED_WITH_WARNINGS" and diff_seconds < crit:
                return 1, "Last Job %s at %s %s, %s Hours ago" % (line[2],line[3],line[4],int(hours))
            elif line[2] == "COMPLETED_WITH_WARNINGS" and diff_seconds >= crit:
                return 2, "Last Job %s at %s %s, %s Hours ago" % (line[2],line[3],line[4],int(hours))
            elif line[2] == "COMPLETED_WITH_ERRORS":
                return 2, "Last Job %s at %s %s, %s Hours ago" % (line[2],line[3],line[4],int(hours))
            elif line[2] == "FAILED":
                return 2, "Last Job %s at %s %s, %s Hours ago" % (line[2],line[3],line[4],int(hours))
            else:
                return 2, "No data, Job deleted?"

check_info["evault_jobs"] = {
    'check_function':            check_evault_jobs,
    'inventory_function':        inventory_evault_jobs,
    'service_description':       'Evault Backup %s',
    'has_perfdata':              'False',
}